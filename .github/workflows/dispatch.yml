name: Dispatch

on:
  issues:
    types: 
      - opened

jobs:
  parse-issue-title:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.parse-title.outputs.result }}
    steps:
      - name: Parse issue title
        id: parse-title
        uses: actions/github-script@v6
        with:
          script: |
            const issueNumber = "${{ github.event.issue.number }}";
            const issueTitle = "${{ github.event.issue.title }}".toLowerCase();
            return issueTitle;
          result-encoding: string

  dispatch-to-handler:
    needs: [parse-issue-title]
    runs-on: ubuntu-latest
    if: needs.parse-issue-title.outputs.result != 'none'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r .github/workflows/requirements.txt

      - name: generate exercise
        run: |
          theme="${{ needs.parse-issue-title.outputs.result }}"
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "content<<$EOF" >> "$GITHUB_ENV"
          python .github/workflows/generate_exercise.py README.md theme >> "$GITHUB_ENV"
          echo "$EOF" >> "$GITHUB_ENV"
          fi

      - name: update README
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.CREATE_TOKEN }}
          script: |
            github.rest.repos.createOrUpdateFileContents({
              owner: context.repo.owner,
              repo: context.repo.repo,
              path: "README.md",
              message: "Updated README.md",
              content: "${{ env.content }}",
            })